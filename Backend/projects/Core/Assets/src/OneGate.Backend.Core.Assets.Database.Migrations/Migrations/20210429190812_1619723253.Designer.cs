// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneGate.Backend.Core.Assets.Database;

namespace OneGate.Backend.Core.Assets.Database.Migrations.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210429190812_1619723253")]
    partial class _1619723253
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("OneGate.Backend.Core.Assets.Database.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int>("ExchangeId")
                        .HasColumnType("integer")
                        .HasColumnName("exchange_id");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ticker");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeId");

                    b.HasIndex("Type", "ExchangeId", "Ticker")
                        .IsUnique();

                    b.ToTable("asset");

                    b.HasDiscriminator<string>("Type").HasValue("Asset");
                });

            modelBuilder.Entity("OneGate.Backend.Core.Assets.Database.Models.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("description");

                    b.Property<int>("EngineId")
                        .HasColumnType("integer")
                        .HasColumnName("engine_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<string>("Website")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("website");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("exchange");
                });

            modelBuilder.Entity("OneGate.Backend.Core.Assets.Database.Models.IndexAsset", b =>
                {
                    b.HasBaseType("OneGate.Backend.Core.Assets.Database.Models.Asset");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("country");

                    b.ToTable("asset");

                    b.HasDiscriminator().HasValue("INDEX");
                });

            modelBuilder.Entity("OneGate.Backend.Core.Assets.Database.Models.StockAsset", b =>
                {
                    b.HasBaseType("OneGate.Backend.Core.Assets.Database.Models.Asset");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("company");

                    b.ToTable("asset");

                    b.HasDiscriminator().HasValue("STOCK");
                });

            modelBuilder.Entity("OneGate.Backend.Core.Assets.Database.Models.Asset", b =>
                {
                    b.HasOne("OneGate.Backend.Core.Assets.Database.Models.Exchange", "Exchange")
                        .WithMany()
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exchange");
                });
#pragma warning restore 612, 618
        }
    }
}
